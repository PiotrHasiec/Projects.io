# Generated by Django 3.0.14 on 2022-01-23 13:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('avatar', models.CharField(default='./frontend/public/FileBase/aaa.bmp', max_length=100)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('averageRate', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Użytkownik',
                'verbose_name_plural': 'Użytkownicy',
            },
        ),
        migrations.CreateModel(
            name='Advertisements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=255)),
            ],
            options={
                'verbose_name': 'Ogłoszenie',
                'verbose_name_plural': 'Ogłoszenia',
            },
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'verbose_name': 'Stanowisko',
                'verbose_name_plural': 'Stanowiska',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=50)),
                ('stage', models.CharField(choices=[('BS', 'BrainStorm'), ('EB', 'EarlyBird'), ('PG', 'PlayGround')], default='BS', max_length=255)),
                ('description', models.TextField(max_length=255)),
                ('folder', models.FilePathField(allow_folders=True, path='./frontend/public/FileBase/')),
                ('presentation', models.FilePathField(allow_folders=True, path='./frontend/public/FileBase/')),
                ('averageRate', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('idOwner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projekt',
                'verbose_name_plural': 'Projekty',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'verbose_name': 'Rola',
                'verbose_name_plural': 'Role',
            },
        ),
        migrations.CreateModel(
            name='SkillsDeveloper',
            fields=[
                ('idUser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Cpp', models.BooleanField(default=False)),
                ('CSharp', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Umiejętności dewelopera',
                'verbose_name_plural': 'Umiejętności deweloperów',
            },
        ),
        migrations.CreateModel(
            name='CollaboratorsProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idPosition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Positions')),
                ('idProject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Projects')),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Twórca',
                'verbose_name_plural': 'Twórcy',
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=255)),
                ('acceptionState', models.CharField(choices=[('P', 'pending'), ('A', 'accepted'), ('R', 'rejected')], default='P', max_length=255)),
                ('idAdvertisement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Advertisements')),
                ('idUser', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zgłoszenie',
                'verbose_name_plural': 'Zgłoszenia',
            },
        ),
        migrations.AddField(
            model_name='advertisements',
            name='idPosition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Positions'),
        ),
        migrations.AddField(
            model_name='advertisements',
            name='idProject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Projects'),
        ),
        migrations.AddField(
            model_name='users',
            name='idRole',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Roles'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='RatingUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('idRatedUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingusers_requests_created', to=settings.AUTH_USER_MODEL)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ocena użytkownika',
                'verbose_name_plural': 'Oceny użytkowników',
                'unique_together': {('idRatedUser', 'idUser')},
            },
        ),
        migrations.CreateModel(
            name='RatingProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('idProject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Projects')),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ocena projektu',
                'verbose_name_plural': 'Oceny projektów',
                'unique_together': {('idProject', 'idUser')},
            },
        ),
    ]
